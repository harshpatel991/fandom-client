function addUserToScope($scope,Users,$window,Shows,callback){$scope.logout=function(){Users.logout(function(data){data.error||($scope.profile=!1,$scope.user=void 0)},function(data){})},Users.getProfile(function(data){$scope.profile=!0,$scope.user=data.user,callback(data),Shows.getFavoriteShows($scope.user._id,function(favorites){$scope.favoritesList=favorites},function(){})},function(){})}var fandomControllers=angular.module("fandomControllers",[]),apiLocation="http://localhost:4000/api";fandomControllers.controller("profileController",["$scope","$http","$window","UsersService","ShowsService",function($scope,$http,$window,Users,Shows){addUserToScope($scope,Users,$window,Shows,function(){})}]),fandomControllers.controller("profileUserController",["$scope","$routeParams","$http","$window","UsersService","CommentsService","ShowsService",function($scope,$routeParams,$http,$window,Users,Comments,Shows){$scope.isMyProfile=!1,addUserToScope($scope,Users,$window,Shows,function(data){$scope.isMyProfile=data.user._id==$scope.selectedUserId}),$scope.selectedUserId=$routeParams.user_id,$scope.numberUpvotes=0,$scope.isMyProfile=!1,Users.getUserProfile($scope.selectedUserId,function(data){$scope.userProfile=data.data},function(){}),Comments.getUserComments($scope.selectedUserId,function(data){for(var userComments=data,i=0;i<userComments.length;i++)$scope.numberUpvotes+=parseInt(userComments[i].points)},function(){}),$scope.changePassword=function(){var newPassword=$scope.newPassword.valueOf(),confirmPassword=$scope.confirmPassword.valueOf();return newPassword!=confirmPassword||void 0===newPassword?void console.log("not equal"):void Users.changePassword($scope.userProfile.local.email,newPassword,function(data){console.log("password changed")},function(data){console.log("password change error"),console.log(data)})}}]),fandomControllers.controller("profileCommentsController",["$scope","$routeParams","$http","$window","UsersService","CommentsService","ShowsService",function($scope,$routeParams,$http,$window,Users,Comments,Shows){addUserToScope($scope,Users,$window,Shows,function(){}),$scope.selectedUserId=$routeParams.user_id,Comments.getUserComments($scope.selectedUserId,function(data){$scope.userComments=data,$scope.userComments.sort(function(a,b){return new Date(b.post_time)-new Date(a.post_time)})},function(){})}]),fandomControllers.controller("profileFavoritesController",["$scope","$routeParams","$http","$window","UsersService","ShowsService",function($scope,$routeParams,$http,$window,Users,Shows){function saveUser(){Users.editUser($scope.user,function(data){$scope.user=data,Shows.getFavoriteShows($scope.user._id,function(favorites){$scope.favoritesList=favorites},function(){})},function(){})}$scope.selectedUserId=$routeParams.user_id,$scope.isMyProfile=!1,addUserToScope($scope,Users,$window,Shows,function(data){$scope.isMyProfile=data.user._id==$scope.selectedUserId}),Shows.getFavoriteShows($scope.selectedUserId,function(data){$scope.userFavorites=data},function(){}),$scope.removeFromFavorites=function(showId){if(void 0!==$scope.userFavorites&&void 0!==$scope.user&&$scope.selectedUserId==$scope.user._id){for(var index=0;index<$scope.userFavorites.length;index++)if($scope.userFavorites[index]._id==showId){$scope.userFavorites.splice(index,1);break}for(index=0;index<$scope.user.favorites.length;index++)if($scope.user.favorites[index]==showId){$scope.user.favorites.splice(index,1);break}0===$scope.user.favorites.length&&($scope.user.favorites=[""]),saveUser()}}}]),fandomControllers.controller("loginController",["$scope","$http","$window","UsersService",function($scope,$http,$window,Users){$scope.messageError="",$scope.message="",$scope.login=function(){$scope.message="Loading...",Users.login($scope.email,$scope.password,function(data){console.log("POST to Login returned good: "+data+"status: "+status),$window.location="#/profile",$scope.message=""},function(data){$scope.messageError="Error! Please verify your email and password.",$scope.message=""})}}]),fandomControllers.controller("signupController",["$scope","$http","$window","UsersService",function($scope,$http,$window,Users){$scope.messageError="",$scope.message="";var re=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;$http.defaults.withCredentials=!0,$scope.signup=function(){$scope.message="Loading...",void 0!=$scope.email&&void 0!=$scope.password&&re.test($scope.email)&&$scope.password.length>3?Users.signup($scope.email,$scope.password,function(data){$scope.messageError="",$scope.message="",$window.location="#/profile"},function(data){$scope.messageError="Email taken",$scope.message=""}):($scope.messageError="Emails must be valid, passwords must be greater than 3 characters",$scope.message="")}}]),fandomControllers.controller("homeController",["$scope","$http","$window","ShowsService","UsersService","ShowsService",function($scope,$http,$window,Shows,Users,Shows){function setHeader(){headerImageIndex=(headerImageIndex+1)%headerImages.length,$("#home-header-image").css("background-image","url(../data/homeImages/"+headerImages[headerImageIndex]+")"),$("#home-header-text-level-1").html(headerLevel1Texts[headerImageIndex]),$("#header-button-text").html('<span class="glyphicon glyphicon-arrow-right"></span> Discuss '+headerTitles[headerImageIndex]+" now"),$("#header-button-text").attr("href","#/show/"+headerLinks[headerImageIndex])}addUserToScope($scope,Users,$window,Shows,function(){}),$scope.search=new Object,$scope.search.genres="";var headerImages=["header-community.jpg","header-got.jpg","header-twd.jpg"],headerTitles=["Community","Game of Thrones","The Walking Dead"],headerLinks=["18347","1399","1402"],headerLevel1Texts=["Cool. <br>Cool, cool, cool.","The North<br> remembers.","This is life <br> now."],headerImageIndex=Math.floor(Math.random()*headerImages.length);setInterval(function(){setHeader()},7e3),setHeader(),Shows.getAllShows(function(data){$scope.shows=data;for(var genres=new Object,movieIndex=0;movieIndex<$scope.shows.length;movieIndex++)for(var genreIndex=0;genreIndex<$scope.shows[movieIndex].genres.length;genreIndex++){var genre=$scope.shows[movieIndex].genres[genreIndex];genres[genre]=genre}$scope.genres=genres},function(){})}]),fandomControllers.controller("showController",["$scope","$routeParams","$http","$window","UsersService","ShowsService","SeasonService","EpisodeService",function($scope,$routeParams,$http,$window,Users,Shows,Seasons,Episode){function saveUser(){Users.editUser($scope.user,function(data){$scope.user=data,checkInFavorites(),Shows.getFavoriteShows($scope.user._id,function(favorites){$scope.favoritesList=favorites},function(){})},function(){})}function checkInFavorites(){$scope.isInFavorites=!1;for(var index=0;index<$scope.user.favorites.length;index++)if($scope.user.favorites[index]==showId){$scope.isInFavorites=!0;break}}var showId=$routeParams.show_id;$scope.isInFavorites=!1,addUserToScope($scope,Users,$window,Shows,function(){checkInFavorites()}),$scope.allEpisodes=[],$scope.allSeasons=[],Shows.getShow(showId,function(data){$scope.show=data,Seasons.getSeasons($scope.show.seasons,function(seasonsList){$scope.allSeasons=seasonsList;for(var allEpisodeIds=[],i=0;i<seasonsList.length;i++)aSeason=seasonsList[i],allEpisodeIds=allEpisodeIds.concat(aSeason.episodes);Episode.getEpisodes(allEpisodeIds,function(data){$scope.allEpisodes=data,setTimeout(function(){$("[class='rating']").each(function(){$(this).rating()})},500)},function(){})},function(){})},function(){}),$scope.addToFavorites=function(){$scope.user.favorites.push(showId),saveUser()},$scope.removeFromFavorites=function(){for(var index=0;index<$scope.user.favorites.length;index++)if($scope.user.favorites[index]==showId){$scope.user.favorites.splice(index,1);break}0===$scope.user.favorites.length&&($scope.user.favorites=[""]),saveUser()}}]),fandomControllers.controller("episodeController",["$scope","$routeParams","$window","CommentsService","UsersService","EpisodeService","ShowsService",function($scope,$routeParams,$window,Comments,Users,Episode,Shows){function scrollToSelectedComment(){void 0!=viewCommentId&&setTimeout(function(){var $selectedComment=$("#"+viewCommentId);void 0!=$selectedComment&&void 0!=$selectedComment.offset()&&$("html, body").animate({scrollTop:$selectedComment.offset().top},500)},800)}addUserToScope($scope,Users,$window,Shows,function(){for(var ratingIndex=0;ratingIndex<$scope.user.episodes_ratings.length;ratingIndex++){var key;for(key in $scope.user.episodes_ratings[ratingIndex])break;if(key===epId){var usersRating=$scope.user.episodes_ratings[ratingIndex][key];$("#user-rating").rating("update",usersRating);break}}}),$scope.sorting="points";var epId=$routeParams.ep_id,viewCommentId=$routeParams.comment_id;$("#user-rating").rating(),$("#user-rating").on("rating.change",function(event,value,caption){for(var oldRatingValue=0,ratingIndex=0;ratingIndex<$scope.user.episodes_ratings.length;ratingIndex++){var key;for(key in $scope.user.episodes_ratings[ratingIndex])break;if(key===epId){oldRatingValue=$scope.user.episodes_ratings[ratingIndex][key],$scope.user.episodes_ratings.splice(ratingIndex,1);break}}var ratingPair={};ratingPair[epId]=value,$scope.user.episodes_ratings.push(ratingPair),Users.editUser($scope.user,function(){},function(){}),Episode.editRating($scope.episode._id,0===oldRatingValue,value-oldRatingValue,function(data){$scope.episode.rating_sum=data.rating_sum,$scope.episode.rating_count=data.rating_count,$("#average-rating").rating("update",$scope.episode.rating_sum/$scope.episode.rating_count)},function(){})}),Episode.getEpisode(epId,function(data){$scope.episode=data,$("#average-rating").val($scope.episode.rating_sum/$scope.episode.rating_count),$("#average-rating").rating(),Shows.getShow($scope.episode.show_id,function(show){$scope.showName=show.name,""===data.img_url&&($scope.episode.img_filename=show.img_filename)},function(){})},function(){}),Comments.getComments(epId,function(data){$scope.comments=data,scrollToSelectedComment()},function(data){}),$scope.showParentReplyBox=!1,$scope.showChildReplyBox=[],$scope.parentReplyBoxText,$scope.replyBoxText=[],$scope.clickReply=function(id){console.log(id),-1==id?$scope.showParentReplyBox=!0:(console.log("Click reply on"+id),$scope.showChildReplyBox[id]=!0)},$scope.hideCommentBox=function(id){-1==id?($scope.showParentReplyBox=!1,$scope.parentReplyBoxText=""):($scope.showChildReplyBox[id]=!1,$scope.replyBoxText[id]="")},$scope.submitParentComment=function(){var textBoxContent=$scope.parentReplyBoxText;Comments.addComment(textBoxContent,$scope.user._id,$scope.user.local.email,$scope.episode._id,-1,$scope.showName,$scope.episode.name,function(data){console.log("Add parent comment finished: "+data),$scope.comments.unshift(data),$scope.hideCommentBox(-1)},function(data){console.log("Add parent comment failed: "+data)})},$scope.submitReplyComment=function(id){var textBoxContent=$scope.replyBoxText[id],replyingTo=$scope.comments[id];Comments.addComment(textBoxContent,$scope.user._id,$scope.user.local.email,$scope.episode._id,replyingTo._id,$scope.showName,$scope.episode.name,function(data){console.log("Add comment finished: "+data),$scope.comments.unshift(data),$scope.hideCommentBox(id)},function(data){console.log("Add child comment failed: "+data)})},$scope.points=function(comment_id,valueChange){var commentUpvotedIndex=$scope.user.comments_upvoted.indexOf(comment_id),commentDownvotedIndex=$scope.user.comments_downvoted.indexOf(comment_id);-1!==commentUpvotedIndex&&(valueChange=2*valueChange,$scope.user.comments_upvoted.splice(commentUpvotedIndex,1),0===$scope.user.comments_upvoted.length&&($scope.user.comments_upvoted=[""])),-1!==commentDownvotedIndex&&(valueChange=2*valueChange,$scope.user.comments_downvoted.splice(commentDownvotedIndex,1),0===$scope.user.comments_downvoted.length&&($scope.user.comments_downvoted=[""])),valueChange>0?$scope.user.comments_upvoted.push(comment_id):0>valueChange&&$scope.user.comments_downvoted.push(comment_id),Users.editUser($scope.user,function(data){$scope.user=data},function(){}),Comments.voteComments(comment_id,valueChange,function(data){console.log("Vote comment finished: "),console.log(data),Comments.getComments($scope.episode._id,function(data){$scope.comments=data},function(data){})},function(data){console.log("Vote comment failed: "+data)})}}]);